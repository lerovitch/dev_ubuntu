- name: create pyenv nlp
  sudo: yes
  sudo_user: developer
  command: /home/developer/.pyenv/bin/pyenv install 2.7.8
  ignore_errors: yes

- name: create pyenv nlp
  sudo: yes
  sudo_user: developer
  command: /home/developer/.pyenv/bin/pyenv virtualenv 2.7.8 nlp
  ignore_errors: yes

###########################
#  install python requirements
##########################

- name: cloning backend repo
  git: repo=git@git.prod.skyscanner.local:hotels-backend/hotelsbackend.git dest=/home/{{ user }}/git/hotelsbackend accept_hostkey=yes key_file=/home/{{ user }}/.ssh/id_rsa
  
- name: make pyenv local for hotelsbackendrepo
  sudo: yes
  sudo_user: developer
  command: /home/{{ user }}/.pyenv/bin/pyenv local nlp chdir=/home/{{user}}/git/hotelsbackend 

- name: copy requirements.txt
  tags: requirements
  copy: src=../files/requirements.txt dest=/tmp/requirements.txt

- name: install requirements wheels from artifactory
  sudo: true
  pip:  requirements=requirements.txt executable=/home/developer/.pyenv/versions/nlp/bin/pip 
  tags: requirements

- name: clean requirements.txt
  file: path=/tmp/requirements.txt state=absent
  tags: requirements

- name: copying postgresql file
  sudo: yes
  tags: posgresql
  copy: src=../files/pg_hba.conf dest=/etc/postgresql/8.4/main/pg_hba.conf owner=postgres group=postgres

- name: restarting postgresql service
  service: name=postgresql state=restarted
  tags: posgresql

- name: copying dump files
  copy: src=../files/{{ item }} dest=/tmp/{{ item }}
  tags: posgresql
  with_items: 
    - nlp.dump
    - nlp_cache.dump
    - seo_v3.dump

- name: creating databases
  command: psql -U postgres -f /tmp/{{ item }}
  tags: posgresql
  with_items: 
    - nlp.dump
    - nlp_cache.dump
    - seo_v3.dump
